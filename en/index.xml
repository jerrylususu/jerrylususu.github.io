<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nekonull&#39;s Garden</title>
    <link>https://nekonull.me/en/</link>
    <description>Recent content on Nekonull&#39;s Garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Nov 2023 20:27:43 +0800</lastBuildDate><atom:link href="https://nekonull.me/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multilingual Hugo Blog</title>
      <link>https://nekonull.me/en/share/hugo-multilang/</link>
      <pubDate>Sat, 04 Nov 2023 20:27:43 +0800</pubDate>
      
      <guid>https://nekonull.me/en/share/hugo-multilang/</guid>
      <description>&lt;p&gt;I recently came across a classmate&amp;rsquo;s sharing, mentioning that after making their blog multilingual, they saw a significant increase in traffic. So, I decided to give it a try as well. With the help of OpenAI, translating articles is not a difficult task. However, adding multilingual support to an existing Hugo site is still not a walk in the park. Although Hugo itself has the basic features for multilingual support (&lt;a href=&#34;https://gohugo.io/content-management/multilingual/&#34;&gt;Documentation: Hugo Multilingual&lt;/a&gt;), if the chosen theme does not support it, modifications to the theme are necessary.&lt;/p&gt;
&lt;p&gt;For my blog, I have chosen the &amp;ldquo;translation by filename&amp;rdquo; approach, which seems to be the least intrusive solution based on the documentation. In simple terms, if your blog&amp;rsquo;s Markdown file is located at &lt;code&gt;/content/blog.md&lt;/code&gt;, you can add an &lt;code&gt;blog.en.md&lt;/code&gt; file at the same level to provide the English translation. After completion, you can access the translated version by appending &lt;code&gt;/en/&lt;/code&gt; to the domain name. (The default language, in my case, is &amp;ldquo;Simplified Chinese,&amp;rdquo; so no language suffix is needed for the path.) However, it is unacceptable to expect users to manually add the language route, so a language selector needs to be added to the page. For now, I have added it to the top of the page. And voila, your multilingual blog is ready to go live!&lt;/p&gt;
&lt;p&gt;There are still some known issues that I will address when I have the time:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Various navigations (e.g., the back button in the top left corner) will return to the root directory of the site (i.e., the Simplified Chinese homepage); the proper way is to return to the corresponding homepage of the current language.&lt;/li&gt;
&lt;li&gt;The RSS feed link is problematic; the default link provided is still for the primary language, while the English link is under the &lt;code&gt;/en/&lt;/code&gt; path. Perhaps an integrated RSS feed should be considered?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Most of the core multilingual code can be seen in this commit: &lt;a href=&#34;https://github.com/jerrylususu/jerrylususu.github.io/pull/27/commits/ca7a83d6750f1f3d940a92b95b2179f793d26dd4&#34;&gt;ca7a83d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more reference links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://discourse.gohugo.io/t/language-switcher-in-menu/11570&#34;&gt;Language switcher in menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.regisphilibert.com/blog/2018/08/hugo-multilingual-part-1-managing-content-translation/&#34;&gt;Hugo Multilingual Part 1: Content translation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Simulating Wait Times at the Gym</title>
      <link>https://nekonull.me/en/share/gym-wait-sim/</link>
      <pubDate>Fri, 29 Sep 2023 15:34:23 +0800</pubDate>
      
      <guid>https://nekonull.me/en/share/gym-wait-sim/</guid>
      <description>&lt;p&gt;In mid-July, I visited the hospital and started exercising regularly upon the doctor&amp;rsquo;s advice. After considering my work schedule and my physical condition, I decided to go to the gym for a workout during lunchtime. Currently, my daily exercise routine consists of spending about 20 minutes on the elliptical machine at the gym (while watching an episode of a TV show), burning approximately 320 calories. However, even though there are plenty of elliptical machines in the gym, a situation occasionally arises where there are no available machines and I have to wait for someone to finish. Not knowing how long the wait will be can be slightly anxiety-inducing. So, I started thinking about whether there is a way to quantify the wait time, such as simulating and calculating the probability distribution function. And that&amp;rsquo;s how this article came about.&lt;/p&gt;
&lt;p&gt;Code (mostly written using GPT3.5, with some manual adjustments): &lt;a href=&#34;https://gist.github.com/jerrylususu/2d8f7099a1c4af37160179b12ce13895&#34;&gt;link to code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Assumption: There are 10 elliptical machines, and the exercise time of each user on a machine, denoted as &lt;code&gt;t_n&lt;/code&gt;, follows a normal distribution with a mean of &lt;code&gt;μ&lt;/code&gt; and a standard deviation of &lt;code&gt;σ&lt;/code&gt;. When I arrive at the gym, all 10 machines are already occupied, and the remaining exercise time for each user is uniformly distributed between 0 and &lt;code&gt;t_n&lt;/code&gt;. The wait time is defined as the minimum of the remaining exercise times for all users.&lt;/p&gt;
&lt;p&gt;Considering that the parameters &lt;code&gt;μ&lt;/code&gt; and &lt;code&gt;σ&lt;/code&gt; cannot be accurately estimated, we consider 9 different scenarios by varying &lt;code&gt;μ&lt;/code&gt; as 5/10/15 and &lt;code&gt;σ&lt;/code&gt; as 20/25/30. For each scenario, we run 10,000 simulations and calculate the p50/p75/p90/p95 of the wait time. The results are summarized in the following table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;μ&lt;/th&gt;
&lt;th&gt;σ&lt;/th&gt;
&lt;th&gt;mean&lt;/th&gt;
&lt;th&gt;p50&lt;/th&gt;
&lt;th&gt;p75&lt;/th&gt;
&lt;th&gt;p90&lt;/th&gt;
&lt;th&gt;p95&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;1.698&lt;/td&gt;
&lt;td&gt;1.252&lt;/td&gt;
&lt;td&gt;2.406&lt;/td&gt;
&lt;td&gt;3.817&lt;/td&gt;
&lt;td&gt;4.811&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;1.258&lt;/td&gt;
&lt;td&gt;0.858&lt;/td&gt;
&lt;td&gt;1.772&lt;/td&gt;
&lt;td&gt;2.944&lt;/td&gt;
&lt;td&gt;3.813&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1.151&lt;/td&gt;
&lt;td&gt;0.737&lt;/td&gt;
&lt;td&gt;1.604&lt;/td&gt;
&lt;td&gt;2.761&lt;/td&gt;
&lt;td&gt;3.641&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2.198&lt;/td&gt;
&lt;td&gt;1.632&lt;/td&gt;
&lt;td&gt;3.123&lt;/td&gt;
&lt;td&gt;4.978&lt;/td&gt;
&lt;td&gt;6.229&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;1.769&lt;/td&gt;
&lt;td&gt;1.258&lt;/td&gt;
&lt;td&gt;2.494&lt;/td&gt;
&lt;td&gt;4.077&lt;/td&gt;
&lt;td&gt;5.213&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1.477&lt;/td&gt;
&lt;td&gt;0.967&lt;/td&gt;
&lt;td&gt;2.069&lt;/td&gt;
&lt;td&gt;3.508&lt;/td&gt;
&lt;td&gt;4.634&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;2.671&lt;/td&gt;
&lt;td&gt;1.977&lt;/td&gt;
&lt;td&gt;3.813&lt;/td&gt;
&lt;td&gt;6.059&lt;/td&gt;
&lt;td&gt;7.515&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;2.284&lt;/td&gt;
&lt;td&gt;1.669&lt;/td&gt;
&lt;td&gt;3.219&lt;/td&gt;
&lt;td&gt;5.186&lt;/td&gt;
&lt;td&gt;6.632&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1.965&lt;/td&gt;
&lt;td&gt;1.364&lt;/td&gt;
&lt;td&gt;2.720&lt;/td&gt;
&lt;td&gt;4.624&lt;/td&gt;
&lt;td&gt;6.019&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://nekonull.me/img/gym_wait_sim_result.png&#34; alt=&#34;Visualization of Simulation Results&#34;&gt;&lt;/p&gt;
&lt;p&gt;Conclusion: Taking all scenarios into account, there is a 50% probability of waiting for about 2 minutes to secure a spot, and in the worst-case scenario, there is a 90% probability of waiting for up to 6 minutes to secure a spot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrating from Disqus to Giscus for the Comment System</title>
      <link>https://nekonull.me/en/share/migrate-to-giscus/</link>
      <pubDate>Sun, 10 Sep 2023 22:08:00 +0800</pubDate>
      
      <guid>https://nekonull.me/en/share/migrate-to-giscus/</guid>
      <description>&lt;p&gt;I used to use Disqus for the comment system, but there were occasional issues with accessing it from within China, and new users had to register again. Considering that most of the readers of this site are likely GitHub users, migrating to Giscus (a comment system based on GitHub Discussions) seems more suitable. Switching the comment system itself is not difficult, you can refer to &lt;a href=&#34;https://blog.arkey.fr/2022/10/16/moving-from-disqus-to-giscus/#_preparing_the_migration&#34;&gt;this tutorial&lt;/a&gt; to modify the Hugo templates and configurations. Migrating the data is not troublesome either, as there weren&amp;rsquo;t many comments to begin with, so there are only two comments to manually migrate, which shouldn&amp;rsquo;t take much time (although I also tried an &lt;a href=&#34;https://github.com/estruyf/disqus-to-github-discussions&#34;&gt;automated solution&lt;/a&gt;, but it seems to have some issues and the migrated comments don&amp;rsquo;t show up&amp;hellip;). The slightly annoying part is actually the switching between light/dark mode in Giscus.&lt;/p&gt;
&lt;p&gt;Because this blog has its own toggle button (see &lt;a href=&#34;https://nekonull.me/share/css-filter-dark-mode/&#34;&gt;previous post&lt;/a&gt;), when users visit, they may retrieve the color mode preference from &lt;code&gt;localstorage&lt;/code&gt;. However, currently, when Giscus is loaded, Hugo writes the color preference parameters into the HTML source code during site generation. Therefore, when the user clicks the button to switch, the color preference in Giscus needs to be switched as well. Referring to &lt;a href=&#34;https://github.com/giscus/giscus/issues/336&#34;&gt;this issue&lt;/a&gt; in the official documentation, this feature is not difficult to implement. However, there is still a problem because after Giscus is loaded, if the user clicks the button to switch color mode preference, Giscus will use the color preference based on my Hugo configuration file, rather than what is stored in the user&amp;rsquo;s localstorage. As a result, the user may manually choose the light mode, but if the browser settings have &lt;code&gt;prefer-color-scheme: dark&lt;/code&gt;, Giscus will display a black background with white text. There wasn&amp;rsquo;t a good solution to this problem in the previous issue discussions, although I saw someone using &lt;code&gt;setTimeout&lt;/code&gt; to continuously loop, but that doesn&amp;rsquo;t seem very elegant. After reading the &lt;a href=&#34;https://github.com/giscus/giscus/issues/336&#34;&gt;official documentation&lt;/a&gt;, I found that Giscus actually sends an event to the parent window after it finishes loading, so as long as we listen for this event, we can set the color preference for Giscus after it has loaded. You can refer to &lt;a href=&#34;https://github.com/jerrylususu/jerrylususu.github.io/commit/8e2c0f1734d645db8bb142f4f281133ecedece7b&#34;&gt;this commit&lt;/a&gt; for the related implementation.&lt;/p&gt;
&lt;p&gt;Perhaps there will be more comments after the switch? Hopefully.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Turning an Existing Vue App into a PWA</title>
      <link>https://nekonull.me/en/posts/vue-app-pwa/</link>
      <pubDate>Sat, 03 Sep 2022 17:21:00 +0800</pubDate>
      
      <guid>https://nekonull.me/en/posts/vue-app-pwa/</guid>
      <description>&lt;p&gt;I previously wrote a small app called &amp;ldquo;Gojuon Quiz&amp;rdquo; to assist in memorizing the Japanese phonetic alphabet. Recently, I decided to add Progressive Web App (PWA) functionality to it. This allows the app to be used even without an internet connection after the initial successful loading. Additionally, it provides a user experience that is similar to a native application, without displaying browser address bars or similar controls.&lt;/p&gt;
&lt;p&gt;The specific steps to implement PWA are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the Vue PWA plugin: &lt;code&gt;vue add pwa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate icons of different sizes and place them in the &lt;code&gt;img/icons&lt;/code&gt; directory. You can use the &lt;a href=&#34;https://realfavicongenerator.net/&#34;&gt;Real Favicon Generator&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Adjust the PWA plugin configuration in &lt;code&gt;vue.config.js&lt;/code&gt;. You can refer to the &lt;a href=&#34;https://cli.vuejs.org/core-plugins/pwa.html#configuration&#34;&gt;@vue/cli-plugin-pwa documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;(Optional) Add update prompts. Refer to &lt;a href=&#34;https://dev.to/drbragg/handling-service-worker-updates-in-your-vue-pwa-1pip&#34;&gt;Handling Service Worker updates in your Vue PWA&lt;/a&gt;.
&lt;blockquote&gt;
&lt;p&gt;Note: Skipping this step will not affect the automatic update feature. However, users will need to manually close and reopen the app after the update to apply the new version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After installation, you can see the following indicators to confirm that the PWA functionality has been successfully configured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The plus icon appears on the right side of the address bar in Chrome/Edge.&lt;/li&gt;
&lt;li&gt;Debugging information related to the service worker is output to the console.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When debugging, there are a few small issues to keep in mind:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PWA is not enabled in development mode (e.g., &lt;code&gt;vue serve&lt;/code&gt;). You need to first run &lt;code&gt;vue build&lt;/code&gt; and manually open an HTTP server in the &lt;code&gt;dist&lt;/code&gt; directory (you can use &lt;code&gt;python -m http.server&lt;/code&gt;) to enable it.&lt;/li&gt;
&lt;li&gt;If you are using a device on a local network to access the HTTP server on the development machine, PWA may not be triggered. This is because PWA requires HTTPS (or the server to be on localhost).&lt;/li&gt;
&lt;li&gt;If you want to customize the name of the PWA, it should be written under &lt;code&gt;pwa.name&lt;/code&gt;, not in other nested structures. (I previously installed the &lt;code&gt;i18n&lt;/code&gt; plugin and habitually wrote it under &lt;code&gt;pluginOptions&lt;/code&gt;.)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Implementing a Simple Dark Mode with CSS Filter</title>
      <link>https://nekonull.me/en/share/css-filter-dark-mode/</link>
      <pubDate>Thu, 23 Dec 2021 10:43:25 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/css-filter-dark-mode/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://github.com/yursan9/manis-hugo-theme&#34;&gt;Manis theme&lt;/a&gt; used on this blog does not provide native support for dark mode, so I decided to add it myself. Initially, I thought about customizing the CSS with media queries, but it seemed like a bigger change. I did a quick search and found that someone had already proposed the idea of using CSS Filter to implement a simple dark mode, and there was even &lt;a href=&#34;https://radu-matei.com/blog/dark-mode/&#34;&gt;code&lt;/a&gt; that could be directly applied to a Hugo blog. Compared to media queries, using CSS Filter not only simplifies the implementation, but also allows users to switch between light and dark mode without adjusting the system/browser&amp;rsquo;s global settings.&lt;/p&gt;
&lt;p&gt;In the specific CSS implementation, I first used &lt;code&gt;invert(1)&lt;/code&gt; to invert the colors of the entire webpage, but this also caused a reversal of color tones. Therefore, I used &lt;code&gt;hue-rotate(180deg)&lt;/code&gt; to bring the tones back. However, while this operation is suitable for text, it affects the display of images, videos, and other elements, making them appear as if they were being X-rayed. So, I had to apply &lt;code&gt;invert(1) hue-rotate(180deg)&lt;/code&gt; again to these elements that needed to be excluded from the dark mode, in order to revert them back to normal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;background-color&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#ebebeb&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;!important&lt;/span&gt;;
}

&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;filter&lt;/span&gt;: invert(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;) hue-rotate(&lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;deg&lt;/span&gt;);
}

&lt;span style=&#34;color:#75715e&#34;&gt;/* using not to exclude certain elements */&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;img&lt;/span&gt;:&lt;span style=&#34;color:#a6e22e&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;icon-text&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; .&lt;span style=&#34;color:#a6e22e&#34;&gt;icon-social&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;code&lt;/span&gt; {
&lt;span style=&#34;color:#66d9ef&#34;&gt;filter&lt;/span&gt;: invert(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;) hue-rotate(&lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;deg&lt;/span&gt;) contrast(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To allow users to switch between light and dark mode, an additional toggle icon needs to be introduced. When clicked, it will insert/remove the CSS tag for dark mode and save the user&amp;rsquo;s preference to &lt;code&gt;localStorage&lt;/code&gt;. If the user has not explicitly set a preference, the system/browser&amp;rsquo;s global dark mode setting should be followed. Therefore, I used &lt;code&gt;window.matchMedia&lt;/code&gt; to detect it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark-mode-toggle&amp;#34;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;darkTheme&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark-mode-theme&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;// probe system default dark mode setting
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (window.&lt;span style=&#34;color:#a6e22e&#34;&gt;matchMedia&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; window.&lt;span style=&#34;color:#a6e22e&#34;&gt;matchMedia&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(prefers-color-scheme: dark)&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;matches&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark&amp;#34;&lt;/span&gt;;
} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;light&amp;#34;&lt;/span&gt;;
}

&lt;span style=&#34;color:#75715e&#34;&gt;// use user preference if possible
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;savedTheme&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;localStorage&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getItem&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark-mode-storage&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;systemDefault&lt;/span&gt;;
&lt;span style=&#34;color:#a6e22e&#34;&gt;setTheme&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;savedTheme&lt;/span&gt;);

&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;addEventListener&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;click&amp;#34;&lt;/span&gt;, () =&amp;gt; {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;endsWith&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/moon.svg&amp;#34;&lt;/span&gt;) ) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;setTheme&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark&amp;#34;&lt;/span&gt;);
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;endsWith&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/sun.svg&amp;#34;&lt;/span&gt;) ) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;setTheme&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;light&amp;#34;&lt;/span&gt;);
    }

});

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setTheme&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;localStorage&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setItem&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark-mode-storage&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt;);

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dark&amp;#34;&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;darkTheme&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;disabled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/sun.svg&amp;#34;&lt;/span&gt;;
    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;mode&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;light&amp;#34;&lt;/span&gt;) {
        &lt;span style=&#34;color:#a6e22e&#34;&gt;darkTheme&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;disabled&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;;
        &lt;span style=&#34;color:#a6e22e&#34;&gt;toggle&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/img/moon.svg&amp;#34;&lt;/span&gt;;
    }
} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The complete modifications can be seen in my &lt;a href=&#34;https://github.com/yursan9/manis-hugo-theme/pull/22&#34;&gt;Pull Request&lt;/a&gt; for implementing dark mode in this theme. A simple example can be found in this &lt;a href=&#34;https://gist.github.com/jerrylususu/c517f091f3d733cf28e29e55b77b50d5&#34;&gt;Gist&lt;/a&gt;. The final result is as follows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nekonull.me/img/css-filter-dark-mode-demo.png&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update on 12/27&lt;/strong&gt;: The PR has been accepted and merged.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Connecting to Physical Screen with VNC</title>
      <link>https://nekonull.me/en/share/vnc-to-physical-display/</link>
      <pubDate>Mon, 13 Dec 2021 16:50:43 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/vnc-to-physical-display/</guid>
      <description>&lt;p&gt;When searching for &amp;ldquo;Linux remote desktop,&amp;rdquo; most tutorials suggest using the combination of &amp;ldquo;xrdp + xfce4.&amp;rdquo; In general, this combination works well, but it may not be as effective for certain special requirements. In my use case, there are times when I have a long-running task on a Linux workstation in the lab, and I need to check if the process is running smoothly when I return to my dormitory. If it were a regular CLI program, using terminal multiplexers like &amp;ldquo;screen&amp;rdquo; or &amp;ldquo;tmux&amp;rdquo; would be more than sufficient. However, I am using a GUI program. So, I searched for a solution and found that it is possible to connect to an ongoing X session using VNC, similar to tools like TeamViewer. Here are the specific steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the TigerVNC server.&lt;/li&gt;
&lt;li&gt;Run &amp;ldquo;vncpasswd&amp;rdquo; to create a VNC password.&lt;/li&gt;
&lt;li&gt;Start the TigerVNC service.&lt;/li&gt;
&lt;li&gt;Use &amp;ldquo;x0vncserver&amp;rdquo; to open a VNC session connected to Display 0.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; x0vncserver -display :0 -PasswordFile&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/home/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;username&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;/.vnc/passwd 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Connect using a VNC client on another device.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In my own experience on Windows, it seems that RealVNC Viewer provides a better user experience compared to TigerVNC Viewer.&lt;/p&gt;
&lt;p&gt;Another issue that may affect the user experience is scaling and screen resolution. The lab workstation has a 4K screen with 200% scaling, and when connecting from a 1080p laptop, the text may appear too small. TigerVNC seems to have an auto-scaling feature, but it doesn&amp;rsquo;t seem to work when connecting the VNC session to a physical screen. My workaround is to first connect and then manually adjust the resolution settings on the remote system (usually setting it to 2560x1440 is sufficient), then restart x0vncserver and reconnect. Although it&amp;rsquo;s a bit cumbersome, at least it solves the problem of usability.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Constructing a RegEx that matches all emojis</title>
      <link>https://nekonull.me/en/share/build-emoji-regex/</link>
      <pubDate>Mon, 13 Dec 2021 16:50:43 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/build-emoji-regex/</guid>
      <description>&lt;p&gt;While researching a CSS custom emoji font issue, I came across a RegEx that can match all emojis (up to the 2018 version) and it also provides corresponding test examples. You can find it here: &lt;a href=&#34;https://www.regextester.com/106421&#34;&gt;Regex to match all emoji - Regex Tester/Debugger&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(\u00a9|\u00ae|[\u2000-\u3300]|\ud83c[\ud000-\udfff]|\ud83d[\ud000-\udfff]|\ud83e[\ud000-\udfff])
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After reading it, I was skeptical because the RegEx seemed too simple. So, I manually converted it to check the corresponding Unicode codepoint range, and I found that there is indeed a problem. The matching range of this RegEx is too broad, excluding the Copyright and Registered symbols (u+00a9, u+00ae), the remaining ranges are [u+2000, u+3300] and [u+1f000, u+1fbff]. The latter range seems reasonable, as it corresponds to the newly added emoji codepoints according to the Unicode plane mapping on Wikipedia. However, the former range is too extensive, even including Japanese Hiragana and Katakana characters. (Although it does cover almost all emoji codepoints, it misses some corner cases like selectors.)&lt;/p&gt;
&lt;p&gt;So, how can we create a RegEx that accurately matches emojis? The idea is simple. First, we need to obtain the Full Emoji List from the Unicode official website, parse all the codepoints that belong to emojis, sort them, and finally merge adjacent codepoints into ranges. However, this is easier said than done. From the perspective of RegEx, characters are in UTF-16 (if using the form \uabcd), so codepoints higher than u+ffff need to be represented using surrogate pairs.&lt;/p&gt;
&lt;p&gt;The final result is as follows: (Test link: &lt;a href=&#34;https://regex101.com/r/uGUM1M/1&#34;&gt;regex101&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(\u00a9|\u00ae|\u203c|\u2049|\u20e3|\u2122|\u2139|[\u2194-\u2199]|[\u21a9-\u21aa]|[\u231a-\u231b]|\u2328|\u23cf|[\u23e9-\u23f3]|[\u23f8-\u23fa]|\u24c2|[\u25aa-\u25ab]|\u25b6|\u25c0|[\u25fb-\u25fe]|[\u2600-\u2604]|\u260e|\u2611|[\u2614-\u2615]|\u2618|\u261d|\u2620|[\u2622-\u2623]|\u2626|\u262a|[\u262e-\u262f]|[\u2638-\u263a]|\u2640|\u2642|[\u2648-\u2653]|[\u265f-\u2660]|\u2663|[\u2665-\u2666]|\u2668|\u267b|[\u267e-\u267f]|[\u2692-\u2697]|\u2699|[\u269b-\u269c]|[\u26a0-\u26a1]|\u26a7|[\u26aa-\u26ab]|[\u26b0-\u26b1]|[\u26bd-\u26be]|[\u26c4-\u26c5]|\u26c8|[\u26ce-\u26cf]|\u26d1|[\u26d3-\u26d4]|[\u26e9-\u26ea]|[\u26f0-\u26f5]|[\u26f7-\u26fa]|\u26fd|\u2702|\u2705|[\u2708-\u270d]|\u270f|\u2712|\u2714|\u2716|\u271d|\u2721|\u2728|[\u2733-\u2734]|\u2744|\u2747|\u274c|\u274e|[\u2753-\u2755]|\u2757|[\u2763-\u2764]|[\u2795-\u2797]|\u27a1|\u27b0|\u27bf|[\u2934-\u2935]|[\u2b05-\u2b07]|[\u2b1b-\u2b1c]|\u2b50|\u2b55|\u3030|\u303d|\u3297|\u3299)|(\ud83c(\udc04|\udccf|[\udd70-\udd71]|[\udd7e-\udd7f]|\udd8e|[\udd91-\udd9a]|[\udde6-\uddff]|[\ude01-\ude02]|\ude1a|\ude2f|[\ude32-\ude3a]|[\ude50-\ude51]|[\udf00-\udf21]|[\udf24-\udf93]|[\udf96-\udf97]|[\udf99-\udf9b]|[\udf9e-\udff0]|[\udff3-\udff5]))|(\ud83d([\udc00-\udcfd]|[\udcff-\udd3d]|[\udd49-\udd4e]|[\udd50-\udd67]|[\udd6f-\udd70]|[\udd73-\udd7a]|\udd87|[\udd8a-\udd8d]|\udd90|[\udd95-\udd96]|[\udda4-\udda5]|\udda8|[\uddb1-\uddb2]|\uddbc|[\uddc2-\uddc4]|[\uddd1-\uddd3]|[\udddc-\uddde]|\udde1|\udde3|\udde8|\uddef|\uddf3|[\uddfa-\ude4f]|[\ude80-\udec5]|[\udecb-\uded2]|[\uded5-\uded7]|[\udedd-\udee5]|\udee9|[\udeeb-\udeec]|\udef0|[\udef3-\udefc]|[\udfe0-\udfeb]))|(\ud83e([\udd0c-\udd3a]|[\udd3c-\udd45]|[\udd47-\uddff]|[\ude70-\ude74]|[\ude78-\ude7c]|[\ude80-\ude86]|[\ude90-\udeac]|[\udeb0-\udeba]|[\udec0-\udec5]|[\uded0-\uded9]|[\udee0-\udee7]))|(\udb40([\udc62-\udc63]|\udc65|\udc67|\udc6c|\udc6e|[\udc73-\udc74]))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The ultimate question: Should you really use regex to handle emojis?&lt;/p&gt;
&lt;p&gt;Postscript: After reinventing the wheel, I discovered that someone has already done this work in the &lt;a href=&#34;https://github.com/mathiasbynens/emoji-test-regex-pattern&#34;&gt;emoji-test-regex-pattern&lt;/a&gt; repository. Moreover, compared to my single character matching approach, the regex in this repo can match sequences of characters that represent emojis (such as the Chinese flag = flag + China), which is more in line with the specification.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Monitor the number of goroutines</title>
      <link>https://nekonull.me/en/share/go-monitor-goroutine-count/</link>
      <pubDate>Mon, 13 Dec 2021 16:44:43 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/go-monitor-goroutine-count/</guid>
      <description>&lt;p&gt;Continuing to complete the previous debug process of writing Raft. After solving the Timer issue, it was discovered that even with repeated testing (using &lt;code&gt;--count 10&lt;/code&gt;), the CPU usage continued to increase, although the rate of increase was reduced, it was still quite severe after multiple iterations. There was a preliminary suspicion that when transitioning roles, there might be a mishandling of goroutines leading to goroutine leaks. So, I searched on Stack Overflow and made some modifications to a code snippet that could print the current number of goroutines in the Go Runtime at regular intervals. Finally, it was indeed found that the number of goroutines kept increasing as the tests progressed. After fixing the leak issue (by adding various conditional checks), each time the test restarted, the number of goroutines would decrease to a level similar to the initial state, and the resource consumption during multiple tests also returned to normal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Debug&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DebugShowGoroutineCount&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;uint32&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;showGoroutineCount&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;beginTime&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Now&lt;/span&gt;()
	&lt;span style=&#34;color:#a6e22e&#34;&gt;ticker&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewTicker&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;)
	&lt;span style=&#34;color:#66d9ef&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ticker&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Stop&lt;/span&gt;()
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ticker&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;C&lt;/span&gt;:
			&lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Since&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;beginTime&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;goroutine count:&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;runtime&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NumGoroutine&lt;/span&gt;())
		}
	}
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;runShowGoroutineCount&lt;/span&gt;() {
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;atomic&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CompareAndSwapUint32&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DebugShowGoroutineCount&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;go&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;showGoroutineCount&lt;/span&gt;()
	}
}

&lt;span style=&#34;color:#75715e&#34;&gt;// to start, just invoke `runShowGoroutineCount` at anywhere you like, perhaps at `ServerStart` or something like that.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Notes on Distributed Systems Course</title>
      <link>https://nekonull.me/en/posts/distributed-system-course-notes/</link>
      <pubDate>Sun, 12 Dec 2021 20:47:32 +0300</pubDate>
      
      <guid>https://nekonull.me/en/posts/distributed-system-course-notes/</guid>
      <description>&lt;p&gt;This semester, I took a course on distributed systems, which is essentially a combination of MIT&amp;rsquo;s Distributed Systems (6.824) and Princeton&amp;rsquo;s Distributed Systems (COS 418) courses. It covers the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fundamentals of distributed systems: RPC and message semantics, logical clocks, distributed snapshots, consistency models, CAP/FLP theory&lt;/li&gt;
&lt;li&gt;Eventual consistency systems: Bayou, DHT, Dynamo&lt;/li&gt;
&lt;li&gt;Consensus and state machine replication: Primary-backup, Viewstamped Replication, Paxos, Raft, P-BFT&lt;/li&gt;
&lt;li&gt;Distributed transactions and strong consistency: 2PC, 2PL, Spanner&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking back at the distributed-related courses I took intermittently in my freshman and sophomore years, it&amp;rsquo;s clear that some things require experience to gradually understand.&lt;/p&gt;
&lt;p&gt;Apart from the course content, the assignments are mostly adapted from MIT&amp;rsquo;s assignments, and they involve implementing the following systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MapReduce (Sequential / Distributed)&lt;/li&gt;
&lt;li&gt;Raft (Election, Log Replication, Fault Tolerance)&lt;/li&gt;
&lt;li&gt;K-V Storage based on Raft (KV-Raft)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last two assignments are worth mentioning because they belong to the type of tasks I would never voluntarily attempt. Just the thought of their potential complexity made me hesitant. However, in reality, due to the comprehensive set of tests provided, implementing them turned out to be a case-by-case process, and it wasn&amp;rsquo;t as difficult as I had imagined. (Although debugging logs can indeed be frustrating.) In the end, I managed to complete Raft and KVRaft within two days, but those were two days of intense focus.&lt;/p&gt;
&lt;p&gt;I tried organizing my notes and provided a link below. However, the lecture slides still need to be obtained manually from the course website, as I do not have redistribution permissions. If there are any errors or omissions, please feel free to point them out.
&lt;a href=&#34;https://nekonull.me/distsys_notes/#/page/all%20distributed%20system%20lectures&#34;&gt;All distributed system lectures&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In conclusion, after completing this course and the assignments, I have gained a bit more confidence in my ability to implement complex systems.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tensorflow Developer Certification Journey</title>
      <link>https://nekonull.me/en/posts/tf-cert-blog/</link>
      <pubDate>Wed, 07 Jul 2021 15:43:00 +0300</pubDate>
      
      <guid>https://nekonull.me/en/posts/tf-cert-blog/</guid>
      <description>&lt;!-- # Tensorflow Developer Certification Journey --&gt;
&lt;p&gt;Also known as: How I Passed the Tensorflow Developer Certification in 7 Days, and Should You Do It Too?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The author took the exam on 7/4/2021. This article was written on 7/7/2021. The content may change in the future.&lt;/p&gt;
&lt;p&gt;In the text, Tensorflow is referred to as TF, Machine Learning as ML, and Deep Learning as DL. Although DL is technically a subset of ML, given the advancements made in various fields, ML and DL are often used interchangeably.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;It is possible to pass the TF Developer Certification in 7 days (or even less).&lt;/li&gt;
&lt;li&gt;In terms of practical skills, the certification is not highly regarded. Passing the certification only means that the person has the basic ability to perform tasks such as image classification, text classification, and time series prediction using TF.&lt;/li&gt;
&lt;li&gt;The significance of this certification may lie more in forcing oneself to read and learn, as well as demonstrating to potential employers the ability and intention to work on ML/DL-related tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;background-knowledge&#34;&gt;Background Knowledge&lt;/h2&gt;
&lt;h3 id=&#34;what-is-this-certification&#34;&gt;What is this certification?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Tensorflow is an open-source DL framework created by Google. It is widely used and supports many services within Google.&lt;/li&gt;
&lt;li&gt;The Tensorflow Developer Certification is a certification program by Google that started in March 2020. It aims to demonstrate the ability of certified individuals to use Tensorflow to build DL models and complete specified tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;why-might-you-want-this-certification&#34;&gt;Why might you want this certification?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Learn ML/DL-related knowledge through the certification process.&lt;/li&gt;
&lt;li&gt;Demonstrate to future employers the willingness and ability to work on ML/DL-related tasks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;how-is-the-exam-conducted&#34;&gt;How is the exam conducted?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Registration fee is $100, and the exam must be taken within 180 days of payment.&lt;/li&gt;
&lt;li&gt;The exam has a time limit of 5 hours and consists of 5 tasks. Once all tasks are completed, the exam can be ended early.&lt;/li&gt;
&lt;li&gt;Each task requires the submission of a model, which can be submitted at any time. Feedback in the form of a 5-point scale is provided almost immediately after submission.&lt;/li&gt;
&lt;li&gt;The tasks have different weights, although the specific weights are not explicitly stated. In theory, a total score of over 90% is required to pass.&lt;/li&gt;
&lt;li&gt;Each task includes a description and a code framework, similar to a fill-in-the-blank exercise.&lt;/li&gt;
&lt;li&gt;Since the models are evaluated on a remote evaluation architecture, the model inputs and outputs are strictly defined. The main adjustments that can be made are the model architecture and training process.&lt;/li&gt;
&lt;li&gt;Pycharm is required for the exam, but it is only used as the exam UI. The actual model building and training can be done on other devices/platforms (such as Colab, Jupyter Notebook), and only the final model file (.h5) needs to be placed back in the exam directory.&lt;/li&gt;
&lt;li&gt;There are no restrictions on internet usage, and any resources can be used.&lt;/li&gt;
&lt;li&gt;After failing the exam, there is a waiting period before being able to retake it (14 days for the first attempt, one month for the second attempt, one year for the third attempt).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;my-background&#34;&gt;My Background&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I started taking some data science/deep learning courses intermittently since my junior year, but I didn&amp;rsquo;t have much practical experience beyond course assignments.&lt;/li&gt;
&lt;li&gt;The DL framework I mainly used before was PyTorch, so I didn&amp;rsquo;t have much knowledge about TensorFlow.&lt;/li&gt;
&lt;li&gt;It is currently summer vacation, so I have some free time.&lt;/li&gt;
&lt;li&gt;I have always wanted to learn TF by reading &amp;ldquo;Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition&amp;rdquo; (HOML), but I couldn&amp;rsquo;t find the motivation to study.&lt;/li&gt;
&lt;li&gt;I was curious about how Google quantifies developers&#39; abilities through certification exams.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;my-goals-for-taking-this-exam&#34;&gt;My Goals for Taking this Exam&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Familiarize myself with the architecture and usage of TF.&lt;/li&gt;
&lt;li&gt;Master the process of building DL models using TF, from data input to model deployment in a production environment.&lt;/li&gt;
&lt;li&gt;Be able to complete common DL tasks (image/text/time series/structured data).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following sections will review the progress of these goals.&lt;/p&gt;
&lt;h2 id=&#34;preparations&#34;&gt;Preparations&lt;/h2&gt;
&lt;p&gt;I first heard about this exam from Daniel Bourke&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=ya5NwvKafDk&#34;&gt;video (YouTube)&lt;/a&gt; and mainly referred to his &lt;a href=&#34;https://www.mrdbourke.com/how-i-got-tensorflow-developer-certified/&#34;&gt;blog&lt;/a&gt; for related materials. In addition, the TFUG Suzhou &lt;a href=&#34;https://www.bilibili.com/video/BV1wf4y117qF/?p=2&#34;&gt;video explanation (Bilibili)&lt;/a&gt; and &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzAwNTM2ODk3NA==&amp;amp;mid=2247483889&amp;amp;idx=1&amp;amp;sn=179ae82e14984af2b07f6d5363d60aaa&#34;&gt;WeChat article&lt;/a&gt; also provided some help.&lt;/p&gt;
&lt;h3 id=&#34;resources&#34;&gt;Resources&lt;/h3&gt;
&lt;p&gt;The following resources are listed in order of importance.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;TF Certificate Candidate Handbook (&lt;a href=&#34;https://www.tensorflow.org/site-assets/downloads/marketing/cert/TF_Certificate_Candidate_Handbook_zh-cn.pdf?hl=zh-cn&#34;&gt;Chinese version link&lt;/a&gt;, &lt;a href=&#34;https://www.tensorflow.org/extras/cert/TF_Certificate_Candidate_Handbook.pdf&#34;&gt;English version link&lt;/a&gt;)
This handbook provides guidance for the TF Developer Certification exam and instructions for setting up the exam environment (can be downloaded from the exam platform before the exam).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Must-have.&lt;/strong&gt; The &amp;ldquo;Candidate Handbook&amp;rdquo; is the most important official document and should be read in detail. It includes a skill checklist, which basically covers the main content of the exam. The &amp;ldquo;Exam Guide&amp;rdquo; and &amp;ldquo;Environment Setup&amp;rdquo; documents are only visible on the exam platform after payment, so it is recommended to read them before the exam and try to set up the environment to avoid any configuration issues during the exam.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Online course &amp;ldquo;DeepLearning.AI TensorFlow Developer Professional Certificate&amp;rdquo; (&lt;a href=&#34;https://www.coursera.org/professional-certificates/tensorflow-in-practice&#34;&gt;Coursera&lt;/a&gt;, &lt;a href=&#34;https://github.com/lmoroney/dlaicourse&#34;&gt;Course Notebook Repo&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Must-have.&lt;/strong&gt; This is actually a collection of four courses covering the basics of deep learning, CNN, NLP, and time series. It aligns almost completely with the skill checklist (in fact, the instructor of the course is the same person who signs the certificate). The course includes videos and an online coding environment, and the exercises are &lt;strong&gt;similar&lt;/strong&gt; to the actual exam questions. If you can complete the course, you should have no major issues with the exam. The course itself is priced at $59, but it offers a one-week free trial (requires a credit card), so you can quickly finish it and cancel the payment method association.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Book &amp;ldquo;Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow, 2nd Edition&amp;rdquo; (&lt;a href=&#34;https://learning.oreilly.com/library/view/hands-on-machine-learning/9781491962282/&#34;&gt;O&amp;rsquo;Reilly&lt;/a&gt;, &lt;a href=&#34;https://github.com/ageron/handson-ml/&#34;&gt;Book Notebook Repo&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recommended.&lt;/strong&gt; This book is more like supplementary reading material and goes beyond the scope of the exam. However, it is helpful for building a knowledge base. Some topics that may not be clear in the online courses (such as the use of &lt;code&gt;tf.Dataset&lt;/code&gt;) are explained in more detail in the book. The parts related to the exam are from Chapter 10 to Chapter 16. My university has a subscription to O&amp;rsquo;Reilly, so I chose to read it on my iPad, but you can also purchase the print version.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TF Official Documentation (&lt;a href=&#34;https://www.tensorflow.org/tutorials&#34;&gt;Tutorials&lt;/a&gt;, &lt;a href=&#34;https://www.tensorflow.org/guide&#34;&gt;Guides&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Optional.&lt;/strong&gt; The tutorials are like cookbooks with examples of solving various tasks. The guides focus more on the underlying principles and fundamental knowledge. You can browse the table of contents and refer to them when encountering unfamiliar concepts. If you have time, you can read them thoroughly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;learning-approach&#34;&gt;Learning Approach&lt;/h3&gt;
&lt;p&gt;When faced with multiple resources covering the same topic, there are generally two learning approaches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Depth-first: Study all resources related to the topic at once.&lt;/li&gt;
&lt;li&gt;Repetition: Study one specific resource at a time and repeat between different topics.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Depth-first&lt;/th&gt;
&lt;th&gt;Repetition&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;https://nekonull.me/img/tf-cert-blog-1.png&#34; alt=&#34;Depth-first&#34;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://nekonull.me/img/tf-cert-blog-2.png&#34; alt=&#34;Repetition&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In Daniel Bourke&amp;rsquo;s blog, he used the depth-first approach (tribird approach), focusing on one topic each day. He would start with the corresponding online course, then read the book, spend time practicing coding, and finish with MIT&amp;rsquo;s videos. However, based on my own experience, I am more accustomed to the repetition approach, which allows the brain to process the knowledge in the background for a period of time before identifying areas that need further clarification. Readers can choose the appropriate approach based on their own preferences.&lt;/p&gt;
&lt;h3 id=&#34;study-timeline&#34;&gt;Study Timeline&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Day 1: Read through the &amp;ldquo;Candidate Handbook&amp;rdquo; and print the skill checklist as a quick reference. Register for the exam and make the payment on the exam platform (must be completed in advance, as the identity verification process takes some time). Study the first two courses of the online course and complete the exercises. (Approximately 8 hours)&lt;/li&gt;
&lt;li&gt;Day 2: Study the last two courses of the online course and complete the exercises. (Approximately 10 hours)&lt;/li&gt;
&lt;li&gt;Day 3: Read Chapters 10 to 13 of the book and take notes. Review the code examples in the corresponding notebooks. (Approximately 8 hours)&lt;/li&gt;
&lt;li&gt;Day 4: Read Chapters 14 to 16 of the book and take notes. Review the code examples in the corresponding notebooks. Read the &amp;ldquo;Keras&amp;rdquo; section of the TF official guide. (Approximately 10 hours)&lt;/li&gt;
&lt;li&gt;Day 5: Read the &amp;ldquo;Keras Machine Learning Basics,&amp;rdquo; &amp;ldquo;Loading and Preprocessing Data,&amp;rdquo; &amp;ldquo;Images,&amp;rdquo; &amp;ldquo;Text,&amp;rdquo; and &amp;ldquo;Structured Data&amp;rdquo; sections of the TF official tutorials. Address any remaining questions from previous notes. Start implementing the exercises from Day 1 (reproduce and use different datasets). (Approximately 12 hours)&lt;/li&gt;
&lt;li&gt;Day 6: Start implementing the exercises from Day 2. Reproduce some interesting examples from the TF official tutorials. Try using Keras-tuner. Prepare the exam environment according to the environment setup document. (Approximately 12 hours)&lt;/li&gt;
&lt;li&gt;Day 7: Review notes. Reread the &amp;ldquo;Candidate Handbook&amp;rdquo; and &amp;ldquo;Exam Guide.&amp;rdquo; Reproduce one of the previous exercises in Pycharm. (Approximately 8 hours)&lt;/li&gt;
&lt;li&gt;Day 8: Take the exam.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;study-tips&#34;&gt;Study Tips&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a collection of code snippets for quick reference (common network structures, preprocessing code, callbacks, etc.).&lt;/li&gt;
&lt;li&gt;Create a checklist, such as:
&lt;ul&gt;
&lt;li&gt;Possible error points when the model accuracy does not meet expectations (based on personal experience with completing exercises).&lt;/li&gt;
&lt;li&gt;Approaches to handle overfitting (based on personal experience and reading related materials).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keep all the code written during the study period for future reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;devices-and-environment&#34;&gt;Devices and Environment&lt;/h3&gt;
&lt;p&gt;I used a workstation in the lab, which had an older GPU (Quardo M2000, 4G VRAM). The system was Ubuntu 18.04, and the Pycharm version was 2021.1.3 Community. As a backup, I also applied for a GPU instance on the school&amp;rsquo;s supercomputer, which had an RTX2080 GPU.&lt;/p&gt;
&lt;p&gt;The models required for the exam are not too large, according to the &amp;ldquo;Exam Guide.&amp;rdquo; If you can run the image classification and text classification examples &lt;a href=&#34;https://www.tensorflow.org/tutorials/images/classification&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://www.tensorflow.org/text/tutorials/text_classification_rnn&#34;&gt;here&lt;/a&gt; on your local machine, you should have no issues. Plus, with a five-hour time limit, there is generally no need to worry about insufficient local computing power causing training failures. If resources are limited, you can use Colab for training or purchase GPU-optimized instances from mainstream cloud providers.&lt;/p&gt;
&lt;p&gt;The exam itself is conducted in a virtual environment using virtualenv. A Python 3.8 environment needs to be set up in advance, and the TF Certification Exam plugin should be installed in Pycharm.&lt;/p&gt;
&lt;p&gt;It is worth noting that although Pycharm allows setting up a remote SSH Python interpreter, this configuration is not supported by the exam plugin. Therefore, it is best to install Pycharm and the exam plugin directly on a device with a GPU.&lt;/p&gt;
&lt;p&gt;In terms of network environment, since the exam requires downloading datasets and uploading models from/to Google&amp;rsquo;s servers, it is recommended to ensure a stable connection to the international internet or take the exam during off-peak hours. The datasets are downloaded using the &lt;code&gt;request&lt;/code&gt; library in the code, but you can also manually download them using other tools and place them in the exam directory.&lt;/p&gt;
&lt;h2 id=&#34;during-the-exam&#34;&gt;During the Exam&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Prepare a Python 3.8 environment in advance and install the TF Certification Exam plugin in Pycharm.&lt;/li&gt;
&lt;li&gt;After running the plugin, log in to your Google account for authentication. The plugin will automatically create a virtual environment (venv) and install dependencies. Once completed, the &amp;ldquo;Start Exam&amp;rdquo; button will appear. Clicking on it will start the exam.&lt;/li&gt;
&lt;li&gt;The plugin will create a Pycharm project with 5 folders named Category1 to Category5. Each folder contains a &lt;code&gt;starter.py&lt;/code&gt; file with a basic code framework, marked with &lt;code&gt;#TODO&lt;/code&gt; comments indicating the parts that need to be filled in. When editing &lt;code&gt;starter.py&lt;/code&gt;, the plugin will automatically display the description of the current question.&lt;/li&gt;
&lt;li&gt;After completing the training, a &lt;code&gt;mymodel.h5&lt;/code&gt; file will be generated in the question folder. If you trained the model on a different device, you can manually place the model file (in h5 format) in the folder. Selecting &amp;ldquo;Submit and Test model&amp;rdquo; in the plugin will automatically submit the model for evaluation on the server. The progress bar in the lower right corner will show the upload progress, and the score (0/5 to 5/5) will be returned within 30 seconds after the upload is complete. If it takes too long to receive a score, it may be due to the model being too large/complex, and you can cancel the current evaluation.&lt;/li&gt;
&lt;li&gt;You can submit the model multiple times. The evaluation is based on a hidden portion of the data on the backend, and according to feedback from some participants, the data may have some randomness. Even for multiple submissions of the same model, the scores may vary.&lt;/li&gt;
&lt;li&gt;Once all questions have received a score of 5/5, click on the plugin and select &amp;ldquo;End Exam.&amp;rdquo; Confirming the selection will end the exam.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was fortunate in my exam experience because I had previously verified the environment based on the &amp;ldquo;Environment Setup&amp;rdquo; document, so I didn&amp;rsquo;t encounter any environment-related issues. The five questions were not very difficult, and I completed four of them and received a score of 5/5 within 40 minutes of starting the exam. However, the NLP question was quite tricky. I tried various architectures but could only achieve a score of 4/5. In the end, I changed the optimizer, reduced the learning rate, and increased the number of epochs to train slowly, finally achieving a score of 5/5. When I finished the exam, there were still 3 hours and 10 minutes remaining.&lt;/p&gt;
&lt;p&gt;The five questions I encountered were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A simple regression task.&lt;/li&gt;
&lt;li&gt;Classification on a dataset that you have definitely encountered multiple times.&lt;/li&gt;
&lt;li&gt;Image classification.&lt;/li&gt;
&lt;li&gt;Natural Language Processing (text classification).&lt;/li&gt;
&lt;li&gt;Time series prediction.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;after-the-exam&#34;&gt;After the Exam&lt;/h2&gt;
&lt;p&gt;If you pass, you will receive a pass notification via email within a few minutes, and you can provide your information to register on Google&amp;rsquo;s certification network. The digital certificate will be sent via email within a few working days.&lt;/p&gt;
&lt;h2 id=&#34;review-and-summary&#34;&gt;Review and Summary&lt;/h2&gt;
&lt;p&gt;Looking back on this week, I think it was an interesting experience. For me, spending money was an effective way to motivate myself to learn. At least during this week, I was able to thoroughly study some chapters of HOML. The exam itself was much easier than I imagined, which further emphasizes that passing this exam is just the beginning and only demonstrates the basic skills of completing simple tasks following tutorials. There is still a long way to go before truly mastering the subject.&lt;/p&gt;
&lt;p&gt;The completion status of the goals I set for myself are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Familiarize myself with the architecture and usage of TF.
&lt;ul&gt;
&lt;li&gt;Completed (went from having no experience to being able to quickly prototype).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Master the process of building DL models using TF, from data input to model deployment in a production environment.
&lt;ul&gt;
&lt;li&gt;Partially completed (focused mainly on data input to model building, but did not cover deployment to a production environment).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Be able to complete common DL tasks (image/text/time series/structured data).
&lt;ul&gt;
&lt;li&gt;Mostly completed (there are many subtasks within each major category, and this study only covered the most basic tasks, but it serves as a good introduction to foundational knowledge and getting started).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;so-should-you-take-this-certification&#34;&gt;So, Should You Take this Certification?&lt;/h3&gt;
&lt;p&gt;In my opinion, for students in computer/data science majors, ML/DL skills are considered a &amp;ldquo;default requirement.&amp;rdquo; The TF Developer Certification is more like an additional skill level, similar to the &amp;ldquo;Computer Level 2&amp;rdquo; certification. It can be seen as an extra skill for students from non-related majors, but it may not have much significance for students within the major. However, currently, obtaining this certification may still have its value, especially in smaller companies where it might be easier to pass the HR screening.&lt;/p&gt;
&lt;p&gt;Table: If you meet the following conditions, you&amp;hellip;should consider taking this certification&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;You might want to&amp;hellip;&lt;/th&gt;
&lt;th&gt;You might not want to&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;- Force yourself to learn something&lt;br /&gt;- Transition from a different major and need to demonstrate your skills and job-seeking intention&lt;br /&gt;- Don&amp;rsquo;t have much experience to write on your resume&lt;/td&gt;
&lt;td&gt;- Already have mature and extensive ML/DL experience&lt;br /&gt;- Don&amp;rsquo;t have the spare money/time&lt;br /&gt;- Think TensorFlow is too difficult and prefer PyTorch&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Code blocks within Markdown tables</title>
      <link>https://nekonull.me/en/share/markdown-code-in-table/</link>
      <pubDate>Fri, 09 Apr 2021 17:10:00 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/markdown-code-in-table/</guid>
      <description>&lt;p&gt;Markdown provides support for tables, but only basic text formatting (such as bold, italics, inline code, etc.) is supported within table cells. More complex text formatting, such as code blocks and horizontal lines, is not supported. If you need to add support for complex formatting within tables and you are using Github Flavored Markdown, one approach is to use HTML to define the table structure and then include inline Markdown text within it. Here is an example:&lt;/p&gt;
&lt;p&gt;Please note the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/td&amp;gt;&lt;/code&gt; tags for the corresponding table cells should be placed at the beginning of a new line (without any indentation).&lt;/li&gt;
&lt;li&gt;There should be a blank line between the Markdown text inside the table cell and the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/td&amp;gt;&lt;/code&gt; tags.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt; Column 1 &lt;/td&gt; &lt;td&gt; Column 2 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Code Block &lt;/td&gt;
&lt;td&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello world&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Horizontal Line &lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Some Text&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;Code: &lt;strong&gt;Note that the code block should end with 3 tildes&lt;/strong&gt; (I&amp;rsquo;m using two here because three would cause rendering errors and prematurely end the code block).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;table&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt; Column 1 &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt; Column 2 &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt; Code Block &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;                           &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--line start--&amp;gt;&lt;/span&gt;
                               &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--empty line--&amp;gt;&lt;/span&gt;
```python
print(&amp;#34;hello world&amp;#34;)
``                             &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--Should be 3 tilt here!--&amp;gt;&lt;/span&gt;
                               &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--empty line--&amp;gt;&lt;/span&gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!--line start--&amp;gt;&lt;/span&gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt; Horizontal Line &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;

**Markdown** 

---

Some Text

&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;td&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;tr&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;table&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Reference link:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/60502719&#34;&gt;https://stackoverflow.com/a/60502719&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Integrating Disqus with Hugo</title>
      <link>https://nekonull.me/en/share/hugo-disqus/</link>
      <pubDate>Sat, 03 Apr 2021 22:30:00 +0300</pubDate>
      
      <guid>https://nekonull.me/en/share/hugo-disqus/</guid>
      <description>&lt;p&gt;Hugo has built-in support for Disqus. In theory, you only need to set the &lt;code&gt;disqusShortname&lt;/code&gt; attribute at the top level of your site&amp;rsquo;s &lt;code&gt;config.toml&lt;/code&gt; file. However, there are some pitfalls when actually using it. Here are the specific steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Register your own account on the Disqus website.&lt;/li&gt;
&lt;li&gt;After logging in to the Disqus website, go to Settings in the upper right corner, then select Moderation on the left side. Here, create a new site, and the site name (&lt;code&gt;{site_name}.disqus.com&lt;/code&gt;) should be used as the value for &lt;code&gt;disqusShortname&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Once the site is created, choose the Free Plan on the Billing page.&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;disqusShortname&lt;/code&gt; in the &lt;code&gt;config.toml&lt;/code&gt; file of Hugo.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Other minor issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No comments displayed locally: In the theme&amp;rsquo;s &lt;code&gt;disqus.html&lt;/code&gt; file (located at &lt;code&gt;{site_folder}\themes\{theme_name}\layouts\partials\disqus.html&lt;/code&gt;), the comment box will not load when the condition (&lt;code&gt;indow.location.hostname == &amp;quot;localhost&amp;quot;&lt;/code&gt;) is met. If you need to debug, you can add a comment to this condition, and it will display normally locally.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reinstall Without Data Loss - Repair Install</title>
      <link>https://nekonull.me/en/posts/repair-install/</link>
      <pubDate>Thu, 18 Feb 2021 01:47:01 +0300</pubDate>
      
      <guid>https://nekonull.me/en/posts/repair-install/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Recently, my main computer running Windows 10 encountered some strange issues, such as the Start menu not opening at times. My initial reaction was to try repairing using the &lt;code&gt;sfc&lt;/code&gt;/&lt;code&gt;dism&lt;/code&gt; commands, but it didn&amp;rsquo;t work. I also tried various other methods, but the problem persisted. At this point, reinstalling seemed like the only option, but the thought of backing up data and reinstalling all the software was daunting. However, I stumbled upon a little trick called &amp;ldquo;Repair Install&amp;rdquo; that actually solved the problem. I couldn&amp;rsquo;t find anyone else mentioning it on the forum, so I decided to share it here.&lt;/p&gt;
&lt;h2 id=&#34;what-is-repair-install&#34;&gt;What is &amp;ldquo;Repair Install&amp;rdquo;?&lt;/h2&gt;
&lt;p&gt;You may not have heard of Repair Install as a Windows user, but you have probably experienced it before: major updates in Windows 10. After completing an update, if you go to &amp;ldquo;Settings - System - About,&amp;rdquo; you&amp;rsquo;ll notice that the &amp;ldquo;Installation date&amp;rdquo; has been changed to the date of the update. This is because a major update in Windows 10 is actually a reinstallation of the system that preserves user data (including files, applications, and settings). That&amp;rsquo;s why major updates usually take longer and show progress percentages similar to a fresh installation.&lt;/p&gt;
&lt;p&gt;Looking at it from a different perspective, since the Windows update mechanism allows for this special type of reinstallation that preserves user data, can users perform it manually? That&amp;rsquo;s essentially what Repair Install is: a manual &amp;ldquo;major update.&amp;rdquo;
(Note: &amp;ldquo;major update&amp;rdquo; is in quotes because it doesn&amp;rsquo;t necessarily require a higher version of the installation media compared to the currently installed system; it can be done with the same version.)&lt;/p&gt;
&lt;h2 id=&#34;when-is-repair-install-suitable&#34;&gt;When is &amp;ldquo;Repair Install&amp;rdquo; suitable?&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Repair Install&amp;rdquo; is suitable when Windows 10 has strange issues that cannot be fixed through other means, including but not limited to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start menu not opening&lt;/li&gt;
&lt;li&gt;UWP apps not opening&lt;/li&gt;
&lt;li&gt;Missing fonts/icons&lt;/li&gt;
&lt;li&gt;Registry corruption&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prerequisites-for-repair-install&#34;&gt;Prerequisites for &amp;ldquo;Repair Install&amp;rdquo;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows can be started normally and accessed from the desktop (if the system cannot be started, there is no solution, even safe mode cannot use this method)&lt;/li&gt;
&lt;li&gt;The installation ISO needs to match the current installed system: same SKU (Home/Pro), same architecture (x86/x64), same language, and the installation ISO version needs to be higher than or equal to the current installed system version&lt;/li&gt;
&lt;li&gt;The current system partition has sufficient free space (according to tenforums, at least 8.87 GB, although the source of this number is unknown. It is recommended to reserve at least 15 GB to avoid a situation similar to &lt;a href=&#34;https://mrmacintosh.com/big-sur-upgrade-not-enough-hd-space-serious-issue-possible-data-loss/&#34;&gt;MacOS Big Sur&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-perform-repair-install&#34;&gt;How to perform &amp;ldquo;Repair Install&amp;rdquo;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Obtain the Windows 10 ISO (you can use Microsoft&amp;rsquo;s official &lt;a href=&#34;https://www.microsoft.com/en-gb/software-download/windows10&#34;&gt;Media Creation Tool&lt;/a&gt; or a third-party direct link like &lt;a href=&#34;https://tb.rg-adguard.net/public.php&#34;&gt;TechBench by WZT (v4.1.1) (rg-adguard.net)&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Double-click to mount the ISO (you can also use other virtual drive tools)&lt;/li&gt;
&lt;li&gt;Go to the mounted drive and run &lt;code&gt;setup.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Proceed with the installation, and on the &amp;ldquo;Choose what to keep&amp;rdquo; page, select &amp;ldquo;Keep personal files, apps, and Windows settings&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Wait patiently for the installation to complete&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reference-links&#34;&gt;Reference links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://answers.microsoft.com/en-us/windows/forum/windows_10-windows_install-winpc/how-to-perform-a-repair-upgrade-using-the-windows/35160fbe-9352-4e70-9887-f40096ec3085&#34;&gt;How to: Perform a Repair Upgrade Using the Windows 10 ISO file - Microsoft Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tenforums.com/tutorials/16397-repair-install-windows-10-place-upgrade.html&#34;&gt;Repair Install Windows 10 with an In-place Upgrade | Tutorials (tenforums.com)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://neosmart.net/wiki/windows-10-repair-installation/#When_to_repair_install_Windows_10&#34;&gt;How To Reinstall Windows 10 (neosmart.net)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>